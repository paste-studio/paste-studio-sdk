// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetLatergramData, GetLatergramResponse, GetLatergramByIdData, GetLatergramByIdResponse, GetHealthData, GetHealthResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class LatergramService {
    public static getLatergram<ThrowOnError extends boolean = false>(options?: Options<GetLatergramData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetLatergramResponse, unknown, ThrowOnError>({
            url: '/latergram/',
            ...options
        });
    }
    
    public static getLatergramById<ThrowOnError extends boolean = false>(options: Options<GetLatergramByIdData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetLatergramByIdResponse, unknown, ThrowOnError>({
            url: '/latergram/{id}',
            ...options
        });
    }
    
}

export class DefaultService {
    public static getHealth<ThrowOnError extends boolean = false>(options?: Options<GetHealthData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetHealthResponse, unknown, ThrowOnError>({
            url: '/health',
            ...options
        });
    }
    
}